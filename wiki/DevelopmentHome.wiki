#labels Phase-Design,Phase-Implementation,Featured
# This page is the home page for development documents, ideas, drafts and other garbages.

We are at 0.4 -> 0.5.

= Roadmap =
  * 0.1: `Origin`
    * Original gtk2-aqd and gnome-macmenu-applet
  * 0.2: `Rename`
    * Rename to Global Menu in order to avoid confusion.
    * Menu bars are scrollable if they are too long to fit into the screen
  * 0.3: `Clean-up`
    * Introduce the inter-process communication protocol for GlobalMenuBar
    * Initial the support for Skinning.
    * GConf preference support for the applet.
    * Better UI.
  * 0.4: `Re-designation` - March 1st, 2008 Can we meet this date? YES WE CAN.
    * Completely redesign in OO to fit every piece into current GDK/GTK architecture.
    * Introduce GnomenuMenuBar and the concept: `global menu for legacy gtk software`
    * Fully solve the Skinning Problem
    * MenuServer widget for general purpose menu server.
  * 0.45: `Get some KDE` - thrown away.
    * GnomenuServerInterface
    * GnomenuServerHelper, implements GnomenuServerInterface 
    * KdeMenuServerHelper, implements GnomenuServerInterface; 
      Due to limitation, it shall lacks function.
    * Widget GnomenuMenuServer
  * 0.5: `trinity`
    * The Menu system introspects itself store the introspection data as a property when attached to a toplevel window.
    * Minimize the IPC formalism. Abandon GnomenuSocket. SMS(broadcasted short messages).
    * The Menu Applet use the introspection data in the active window to build the menubar on the fly. (How to deal with the `transient_for` property?)
    * Sub-menus are created by Applications.
    * Menu Applet try to grab the `Alt+` shortcuts. (the AccelKeys should be controled by `GtkAction` and we don't need to bother on it.)
    * Using cache to increase responding rate.
  * 0.6: `dbus` - Throw it away.
    * Move to [http://vala.gnome.org vala] for core development. Several patches to Vala is required. Most are in vala upstream (0.3.2) now.
    * Every Application exposes the Menu System as a DBus connection. 
    * Every application registers the DBus Connection in `org/gnomenu/Service.register(uint64 Window, string uniquebusname)`
    * Global Menu Manager looks up the proper Menu System via `org/gnomenu/Service.lookup(uint64 Window, out string uniquebusname)`.
    * ideas goes into DbusBasedGlobalMenu, and Issue 67.
  * 1.0: `Happy New Year` - or `Merry Christmas`?
    * Stable Release!
    * either the 0.5 arch or the 0.4 arch
    * work on 64bit and PPC.

= Features =
||DevelopmentDefaultMenu  ||Target: 0.5|| Happens to be Done in 0.4||
||DevelopmentCompatibilityEtoile|| ||
||DevelopmentCompatibilityKDE||  ||
= Development Documentation - 0.4 =

== Classes ==

|| Class Name || Desc ||Parent       || Dependencies || Location ||
|| GnomenuSocket  || interwindow communication for gtk|| GObject      || GdkWindow, GdkEvent, gdk-x11, Xlib || libgnomenu ||
|| GnomenuServerHelper || menu server class|| GObject || GnomenuSocket || libgnomenu||
|| GnomenuClientHelper || menu client class|| GObject || GnomenuSocket || libgnomenu||
|| GtkMenuBar || old gtk menubar, hacked to return GnomenuMenuBar on demand|| GtkMenuShell || GtkMenuItem, GnomenuMenuBar || gtk||
|| GnomenuMenuBar || global menubar || GtkMenuBar || GtkMenuItem, GnomeMenuClientHelper|| libgnomenu ||

== Arch ==

Menu Server s are built upon MenuServer object. MenuServer object can also optionally implement compatiblility for KDE and Etotile; but currently I don't want to do it.

Patch GTK, when gtk_menu_bar_get_type is called, it detects whether or not gnomenu_menu_bar_type (sub class of GtkMenuBar) is already setup, if so, return gnomenu_menu_bar_type if the quirks allows it to do so.

GnomenuMenuBar has two mode, decided by priv->detached. If it successfully connect to a menu server, it will become detached. Whenever the connection dies, it become FALSE and menu bar goes back to the parent window.

GnomeMenuQuirks will load quirks from a rc file(~/.libgnomenu.conf and /etc/libgnomenu.conf

Format:
{{{
program_name(regexp)      :       ignore, force-show-all, hide-on-quit, roaming
program_name/detail       :       ...................................
}}}
If there is multi matches, the result is accumulative.

Development documentation can be build. 
http://gnome2-globalmenu.googlecode.com/files/libgnomenu-book-556.tar.gz