#labels Phase-Design,Phase-Implementation,Featured
# This page is the home page for development documents, ideas, drafts and other garbages.

We are at 0.4.

= Roadmap =
  * 0.1: `Origin`
    * Original gtk2-aqd and gnome-macmenu-applet
  * 0.2: `Rename`
    * Rename to Global Menu in order to avoid confusion.
    * Menu bars are scrollable if they are too long to fit into the screen
  * 0.3: `Clean-up`
    * Introduce the inter-process communication protocol for GlobalMenuBar
    * Initial the support for Skinning.
    * GConf preference support for the applet.
    * Better UI.
  * 0.4: `Re-designation` - March 1st, 2008 Can we meet this date? YES WE CAN.
    * Completely redesign in OO to fit every piece into current GDK/GTK architecture.
    * Introduce GnomenuMenuBar and the concept: `global menu for legacy gtk software`
    * Fully solve the Skinning Problem
    * MenuServer object (not a widget yet) for general purpose menu server.
  * 0.45: Optional
    * Abstract the widget embedding part from GnomenuServerHelper and GnomenuClientHelper
    * Submit those together with GnomenuSocket, GnomenuMenuBar (if possible) to GTK mainstream and see what happens.
  * 0.5: `Integration` 
    * merge MenuServerApplet into gnome-panel to enhance desktop integration.
    * All of the GNOME Applications will be patched to build upon GtkGlobalMenuBar instead of GtkMenuBar .
    * Patch gnome-window-properties to provide an option to disable or enable global menu bar.
  * 0.6: `Platforms`
    * Remove the x11 dependency, or seperate GdkSocket into gdksocket-x11 and gdksocket-w32

= Features =
||DevelopmentDefaultMenu  ||Target: 0.5||
||DevelopmentCompatibilityEtoile|| ||

= Development Documentation Draft for 0.4 =

== Classes ==

|| Class Name || Desc ||Parent       || Dependencies || Location ||
|| GnomenuSocket  || interwindow communication for gtk|| GObject      || GdkWindow, GdkEvent, gdk-x11, Xlib || libgnomenu ||
|| GnomenuServerHelper || menu server class|| GObject || GnomenuSocket || libgnomenu||
|| GnomenuClientHelper || menu client class|| GObject || GnomenuSocket || libgnomenu||
|| GtkMenuBar || old gtk menubar, hacked to return GnomenuMenuBar on demand|| GtkMenuShell || GtkMenuItem, GnomenuMenuBar || gtk||
|| GnomenuMenuBar || global menubar || GtkMenuBar || GtkMenuItem, GnomeMenuClientHelper|| libgnomenu ||

== Arch ==

Menu Server s are built upon MenuServer object. MenuServer object can also optionally implement compatiblility for KDE and Etotile; but currently I don't want to do it.

Patch GTK, when gtk_menu_bar_get_type is called, it detects whether or not gnomenu_menu_bar_type (sub class of GtkMenuBar) is already setup, if so, return gnomenu_menu_bar_type if the quirks allows it to do so.

GnomenuMenuBar has two mode, decided by priv->detached. If it successfully connect to a menu server, it will become detached. Whenever the connection dies, it become FALSE and menu bar goes back to the parent window.

GnomeMenuQuirks will load quirks from a rc file(~/libgnomenu.conf /etc/libgnomenu.conf

Format:
{{{

program_name(regexp)      :       quirk(only ignore is supported yet)
}}}

Development documentation can be build. I'll upload it and add a link here.


